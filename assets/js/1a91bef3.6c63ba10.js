"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[445],{5652:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"api/trace","title":"Transaction Trace API","description":"GET /api/trace/:txHash","source":"@site/docs/api/trace.md","sourceDirName":"api","slug":"/api/trace","permalink":"/illusio-docs/api/trace","draft":false,"unlisted":false,"editUrl":"https://github.com/hypurrstudio/illusio-docs/docs/api/trace.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Transaction Simulation","permalink":"/illusio-docs/api/simulation"},"next":{"title":"Basic Transaction Simulation","permalink":"/illusio-docs/examples/basic-simulation"}}');var t=s(4848),r=s(8453);const c={sidebar_position:3},l="Transaction Trace API",i={},o=[{value:"GET /api/trace/",id:"get-apitrace",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Path Parameters",id:"path-parameters",level:4},{value:"Response",id:"response",level:3},{value:"Response Fields",id:"response-fields",level:3},{value:"Trace Object",id:"trace-object",level:4},{value:"Call Object",id:"call-object",level:4},{value:"Event Object",id:"event-object",level:4},{value:"StateChange Object",id:"statechange-object",level:4},{value:"Example Usage",id:"example-usage",level:3},{value:"Error Responses",id:"error-responses",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"transaction-trace-api",children:"Transaction Trace API"})}),"\n",(0,t.jsxs)(n.h2,{id:"get-apitrace",children:["GET /api/trace/",":txHash"]}),"\n",(0,t.jsx)(n.p,{children:"Get detailed execution traces for a transaction, including all internal calls, events, and state changes."}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h4,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txHash"})," - The hash of the transaction to trace"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "trace": {\n    "hash": "0x...",\n    "from": "0x...",\n    "to": "0x...",\n    "gasUsed": "34562",\n    "status": true,\n    "calls": [\n      {\n        "type": "CALL",\n        "from": "0x...",\n        "to": "0x...",\n        "value": "0",\n        "gas": "2300",\n        "gasUsed": "2300",\n        "input": "0x...",\n        "output": "0x...",\n        "calls": [] // Nested calls\n      }\n    ],\n    "events": [\n      {\n        "address": "0x...",\n        "topics": [\n          "0x...", // Event signature\n          "0x..." // Indexed parameter\n        ],\n        "data": "0x..." // Non-indexed parameters\n      }\n    ],\n    "stateChanges": [\n      {\n        "address": "0x...",\n        "slot": "0x...",\n        "previousValue": "0x...",\n        "newValue": "0x..."\n      }\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"response-fields",children:"Response Fields"}),"\n",(0,t.jsx)(n.h4,{id:"trace-object",children:"Trace Object"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hash"})," - Transaction hash"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," - Transaction sender"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"to"})," - Target contract address"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gasUsed"})," - Total gas consumed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"status"})," - Transaction success status (true/false)"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"call-object",children:"Call Object"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"type"})," - Type of call (CALL, STATICCALL, DELEGATECALL, CREATE, CREATE2)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," - Caller address"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"to"})," - Target address"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"value"})," - ETH value transferred"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gas"})," - Gas limit for this call"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gasUsed"})," - Gas consumed by this call"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"input"})," - Input data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"output"})," - Return data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"calls"})," - Array of nested calls"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"event-object",children:"Event Object"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"address"})," - Contract that emitted the event"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"topics"})," - Array of indexed parameters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," - ABI-encoded non-indexed parameters"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"statechange-object",children:"StateChange Object"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"address"})," - Contract address"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"slot"})," - Storage slot"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"previousValue"})," - Value before the transaction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"newValue"})," - Value after the transaction"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Get trace for a transaction\nconst txHash = '0x123...';\nconst response = await fetch(`http://localhost:8000/api/trace/${txHash}`);\nconst data = await response.json();\n\nif (data.success) {\n  // Process trace data\n  const { calls, events, stateChanges } = data.trace;\n  \n  // Analyze internal transactions\n  calls.forEach(call => {\n    console.log(`Call from ${call.from} to ${call.to}`);\n    console.log(`Gas used: ${call.gasUsed}`);\n  });\n  \n  // Process emitted events\n  events.forEach(event => {\n    console.log(`Event from ${event.address}`);\n    console.log(`Topics: ${event.topics}`);\n  });\n  \n  // Check state changes\n  stateChanges.forEach(change => {\n    console.log(`Contract ${change.address} storage slot ${change.slot} changed`);\n    console.log(`From ${change.previousValue} to ${change.newValue}`);\n  });\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "success": false,\n  "error": {\n    "code": "ERROR_CODE",\n    "message": "Error description"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Common error codes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"TX_NOT_FOUND"}),": Transaction hash not found"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INVALID_TX_HASH"}),": Invalid transaction hash format"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"TRACE_FAILED"}),": Failed to generate trace"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var a=s(6540);const t={},r=a.createContext(t);function c(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);